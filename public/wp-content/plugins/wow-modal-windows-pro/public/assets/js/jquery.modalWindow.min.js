/* ========= INFORMATION ============================
	- document:  Wow Modal Windows - The most powerful creator of popups & flyouts!
	- author:    Wow-Company
	- profile:   https://wow-estore.com/item/wow-modal-windows-pro/
	- version:   4.4
==================================================== */
"use strict";
! function(e) {
    if (e(".modal-window-content .wow-modal-form").on("submit", (function(o) {
            o.preventDefault();
            let n = this.id,
                t = "action=send_modal_window&" + e(this).serialize();
            e.post(send_modal_form.ajaxurl, t, (function(o) {
                e("#" + n).html(o)
            }))
        })), !e || void 0 === e) return console.log("[ModalWindow] No jQuery library detected. Load ModalWindow after jQuery has been loaded on the page.");
    e.fn.ModalWindow = function(o) {
        let n = {
            animation: ["no", 400, "no", 400],
            overlay: !0,
            overlay_css: ["rgba(0, 0, 0, 0.7)"],
            modal_css: {},
            content_css: {},
            title_css: {},
            video: [!1, !1, !1],
            action: ["load", 0],
            scrolled: [0, "px"],
            closeBtn: [!1, 0],
            autoClose: [!1, 5],
            closeAction: [!1, !1],
            screenMax: [!1, 1024],
            screenMin: [!1, 480],
            floatBtn: [!1, "wow-modal-button", "right"],
            floatBtnAnimation: [!1, "no", 5, "wow-animated", 5],
            cookie: [!1, 0, "cookie-name", ".modal-only-once"],
            closeRedirect: [!1, "", ""],
            triggers: ["modal-open", "modal-close", "close-btn"],
            zindex: "999999",
            byURL: [!1, "popup=active"]
        };
        return this.each((function() {
            let t = e.extend(!0, {}, n, o),
                i = this,
                c = (i.id, e(window).width()),
                l = function() {
                    let o = e(i).find('iframe[src*="youtube.com"]'),
                        n = e(i).find('iframe[src*="vimeo.com"]');
                    return o.length > 0 ? o : n.length > 0 && n
                }();

            function a() {
                let o = parseInt(t.animation[1]);
                !0 === t.overlay && e("html, body").addClass("no-scroll"), e(i).fadeIn(o, (function() {
                        let n = t.animation[0].split(":");
                        if ("no" == n) e(i).children(".wow-modal-window").fadeIn(o);
                        else if ("fade" == n) e(i).children(".wow-modal-window").show("fade", o);
                        else switch (n[1]) {
                            case "direction":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    direction: n[2]
                                }, o);
                                break;
                            case "times":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    times: n[2]
                                }, o);
                                break;
                            case "pieces":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    pieces: n[2]
                                }, o);
                                break;
                            case "size":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    size: n[2]
                                }, o);
                                break;
                            case "percent":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    percent: n[2]
                                }, o);
                                break;
                            case "color":
                                e(i).children(".wow-modal-window").show(n[0], {
                                    color: n[2]
                                }, o)
                        }
                    })),
                    function() {
                        if (!0 === t.video[0] && !0 === t.video[1] && l) {
                            let o = e(l).attr("src");
                            e(l).attr("src", o + "?autoplay=1")
                        }
                    }(), !0 !== t.closeBtn[0] && function() {
                        let o = 1e3 * parseInt(t.closeBtn[1]);
                        setTimeout((function() {
                            e(i).find(".mw-close-btn").show()
                        }), o)
                    }(), !0 === t.autoClose[0] && function() {
                        let e = 1e3 * parseInt(t.autoClose[1]);
                        setTimeout((function() {
                            s()
                        }), e)
                    }()
            }

            function s() {
                let o = parseInt(t.animation[3]),
                    n = t.animation[2].split(":");
                if ("no" == n) e(i).children(".wow-modal-window").fadeOut(o, d());
                else if ("fade" == n) e(i).children(".wow-modal-window").hide("fade", o, d());
                else switch (n[1]) {
                    case "direction":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            direction: n[2]
                        }, o, d());
                        break;
                    case "times":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            times: n[2]
                        }, o, d());
                        break;
                    case "pieces":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            pieces: n[2]
                        }, o, d());
                        break;
                    case "size":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            size: n[2]
                        }, o, d());
                        break;
                    case "percent":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            percent: n[2]
                        }, o, d());
                        break;
                    case "color":
                        e(i).children(".wow-modal-window").hide(n[0], {
                            color: n[2]
                        }, o, d())
                }
                f(),
                    function() {
                        if (t.closeRedirect[0]) {
                            let e = t.closeRedirect[1];
                            "" !== e && e.indexOf("http") > -1 && window.open(e, t.closeRedirect[2])
                        }
                    }()
            }

            function d() {
                if (!0 === t.overlay) {
                    let o = parseFloat(t.animation[3]);
                    e(i).fadeOut(o),
                        function() {
                            if (!0 === t.video[0] && !0 === t.video[2] && l) {
                                let o = e(l).attr("src");
                                o = o.split("?")[0], e(l).attr("src", o + "?autoplay=0")
                            }
                        }(), e("html, body").removeClass("no-scroll")
                }
            }

            function r() {
                let e = 1e3 * parseInt(t.action[1]);
                setTimeout((function() {
                    a()
                }), e)
            }

            function w() {
                e("." + t.floatBtn[1]).addClass(t.floatBtnAnimation[3] + " wow-infinite " + t.floatBtnAnimation[1] + " " + t.floatBtn[2]);
                let o = 1e3 * parseFloat(t.floatBtnAnimation[2]);
                setTimeout((function() {
                    e("." + t.floatBtn[1]).removeClass(t.floatBtnAnimation[3] + " wow-infinite " + t.floatBtnAnimation[1]),
                        function() {
                            let e = 1e3 * parseFloat(t.floatBtnAnimation[4]);
                            setTimeout((function() {
                                w()
                            }), e)
                        }()
                }), o)
            }

            function f() {
                if (!0 !== t.cookie[0]) return;
                let e = parseFloat(t.cookie[1]),
                    o = new Date;
                o.setTime(o.getTime() + 24 * e * 60 * 60 * 1e3), document.cookie = e > 0 ? t.cookie[2] + "=yes; path=/; expires=" + o.toGMTString() : t.cookie[2] + "=yes; path=/;"
            }! function() {
                t.overlay && function() {
                    let o = e(i);
                    e(o).css({
                        "z-index": t.zindex - 3,
                        "background-color": t.overlay_css[0]
                    })
                }();
                (function() {
                    let o = e(i).children(".modal-window-content");
                    e(o).css(t.content_css)
                })(),
                function() {
                    let o = e(i).children(".wow-modal-window");
                    e(o).css("z-index", t.zindex - 1), e(o).css(t.modal_css)
                }(),
                function() {
                    if (!1 === e.isEmptyObject(t.title_css)) {
                        let o = e(i).find(".mw-title");
                        e(o).css(t.title_css)
                    }
                }(),
                function() {
                    let o = e(i).children(".mw-close-btn");
                    e(o).css("z-index", t.zindex)
                }()
            }(),
            function() {
                if (!0 !== function() {
                        if (!0 !== t.byURL[0]) return !0;
                        const e = t.byURL[1].split("="),
                            o = e[0],
                            n = e[1],
                            i = new URLSearchParams(document.location.search);
                        return i.get(o) === n
                    }()) return;
                if (!0 === function() {
                        if (!0 === t.screenMax[0] && t.screenMax[1] < c) return !1;
                        if (!0 === t.screenMin[0] && t.screenMin[1] > c) return !1;
                        return !0
                    }()) {
                    if (!0 === t.cookie[0]) {
                        if (void 0 !== function(e) {
                                let o = document.cookie.match(new RegExp("(?:^|; )" + e.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, "\\$1") + "=([^;]*)"));
                                return o ? decodeURIComponent(o[1]) : void 0
                            }(t.cookie[2])) return
                    }
                    switch (t.action[0]) {
                        case "hover":
                            ! function() {
                                let o = t.triggers[0];
                                e("#" + o + ", ." + o + ', a[href$="' + o + '"]').on("mouseover", (function(e) {
                                    e.preventDefault(), a()
                                }))
                            }();
                            break;
                        case "load":
                            r();
                            break;
                        case "close":
                            e(document).on("mouseleave", (function(o) {
                                o.clientY < 0 && (a(), e(document).off("mouseleave"))
                            }));
                            break;
                        case "scroll":
                            e(document).on("scroll", (function() {
                                let o = e(window).scrollTop(),
                                    n = e(document).height(),
                                    i = e(window).height();
                                if ("px" === t.scrolled[1]) e(this).scrollTop() >= (n - i) * parseInt(t.scrolled[0]) / 100 && (r(), e(document).off("scroll"));
                                else {
                                    let c = o / (n - i);
                                    Math.round(100 * c) >= parseInt(t.scrolled[0]) && (r(), e(document).off("scroll"))
                                }
                            }));
                            break;
                        case "rightclick":
                            e(document).on("contextmenu", (function() {
                                return r(), !1
                            }));
                            break;
                        case "selectedtext":
                            e(document).on("mouseup", (function(e) {
                                (window.getSelection && window.getSelection() || document.getSelection && document.getSelection() || document.selection && document.selection.createRange && document.selection.createRange().text).toString().length > 2 && r()
                            }))
                    }!0 === t.floatBtnAnimation[0] && w(),
                        function() {
                            let o = t.triggers[0];
                            e("#" + o + ", ." + o + ', a[href$="' + o + '"]').on("click", (function(e) {
                                e.preventDefault(), a()
                            })), e(t.cookie[3]).on("click", (function(e) {
                                f()
                            }))
                        }()
                }
            }(),
            function() {
                let o = t.triggers[1],
                    n = "#" + o + ", ." + o + ', a[href$="' + o + '"], #' + t.triggers[2];
                e(n).on("click", (function(e) {
                    e.preventDefault(), s()
                })), e(i).find(".ds-close-popup").on("click", (function() {
                    s()
                }))
            }(), !0 === t.closeAction[0] && e(i).children(".wow-modal-overclose").on("click", (function() {
                s()
            })), !0 === t.closeAction[1] && e(window).on("keydown", (function(e) {
                "Escape" !== e.key && "Esc" !== e.key || s()
            }))
        }))
    }
}(jQuery);